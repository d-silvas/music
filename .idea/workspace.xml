<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0a3cfaad-a9fa-40fc-8143-05f2fdd4cd02" name="Changes" comment="Fix front-end and modify project configuration.">
      <change afterPath="$PROJECT_DIR$/back-end/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/MusicApplication.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/MusicApplicationConfiguration.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/Album.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumController.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumNotFoundException.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumRepository.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumService.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumSpecification.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/Song.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongController.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongNotFoundException.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongRepository.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongService.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/utils/SearchCriteria.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-archiver/pom.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/music-0.0.1-SNAPSHOT.jar" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/music-0.0.1-SNAPSHOT.jar.original" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/surefire-reports/TEST-dev.davidsilva.music.MusicApplicationTests.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/surefire-reports/dev.davidsilva.music.MusicApplicationTests.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/test-classes/dev/davidsilva/music/MusicApplicationTests.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/button/button.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/button/button/button.component.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/button/button/button.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/card/card.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/card/card/card.component.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/card/card/card.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/Album.java" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/Album.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/Song.java" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/Song.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/albums/albums.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/albums/albums.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/app.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/app.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/app.component.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/app.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/app.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/album.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/album.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/album.component.scss" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/album.component.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/album-peek/album-peek.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/album-peek/album-peek.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-play/playlist-play-album.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-play/playlist-play-album.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-replace/playlist-replace.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-replace/playlist-replace.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/song/controls/playlist-remove/playlist-remove.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/song/controls/playlist-remove/playlist-remove.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-add-to-playlist/icon-add-to-playlist.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-add-to-playlist/icon-add-to-playlist.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-cancel/icon-cancel.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-cancel/icon-cancel.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-eye/icon-eye.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-eye/icon-eye.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-play/icon-play.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-play/icon-play.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/icons/icons.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icons.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar/topbar.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar.component.scss" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar/topbar.component.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar/topbar.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/ui.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/ui.module.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 0
}]]></component>
  <component name="ProjectId" id="2l6r0aNZCa5CebFJ9uOP1RQgodn" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultHtmlFileTemplate": "HTML File",
    "HTTP Request.MusicApplication | #2.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Spring Boot.MusicApplication.executor": "Run",
    "code.cleanup.on.save": "true",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/home/dev/dev/music/front-end/src/app/ui/button/button",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "npm.Front-end.executor": "Run",
    "prettierjs.PrettierConfiguration.Package": "/home/dev/dev/music/front-end/node_modules/prettier",
    "rearrange.code.on.save": "true",
    "settings.editor.selected.configurable": "settings.javascript.linters.eslint",
    "ts.external.directory.path": "/home/dev/dev/music/front-end/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "sqlite"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/button/button" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/icons" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/card/card" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/icons" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/topbar" />
    </key>
  </component>
  <component name="RunManager" selected="npm.Front-end">
    <configuration name="MusicApplication | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/MusicApplication.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="MusicApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="music" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="dev.davidsilva.music.MusicApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Front-end" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/front-end/package.json" />
      <command value="start" />
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="HTTP Request.MusicApplication | #2" />
      <item itemvalue="npm.Front-end" />
      <item itemvalue="Spring Boot.MusicApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.MusicApplication | #2" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.20224.419" />
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-IU-242.20224.419" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0a3cfaad-a9fa-40fc-8143-05f2fdd4cd02" name="Changes" comment="" />
      <created>1724511145566</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1724511145566</updated>
      <workItem from="1724511147069" duration="15429000" />
    </task>
    <task id="LOCAL-00001" summary="Simplify back-end&#10;&#10;Deleted cloud-gateway-service, discovery-server, and music-service projects. Added a single back-end Spring application instead.">
      <option name="closed" value="true" />
      <created>1724520665911</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1724520665911</updated>
    </task>
    <task id="LOCAL-00002" summary="Fix front-end and modify project configuration.">
      <option name="closed" value="true" />
      <created>1724520743433</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1724520743433</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Remove legacy services and add new music back-end application.&#10;&#10;Deleted outdated Cloud Gateway and Discovery Server services, including all related configuration, source, and resource files. Introduced a new music back-end app with comprehensive class files for album and song management, as well as application configuration and test files." />
    <MESSAGE value="Remove Maven wrapper and related configurations&#10;&#10;This change deletes Maven wrapper files and configuration for cloud-gateway-service, discovery-server, and music-service modules. The adjustment includes removing pom.xml files, application configurations, and test classes. This simplifies the project structure and moves towards a standardized build setup." />
    <MESSAGE value="Simplify back-end&#10;&#10;Deleted cloud-gateway-service, discovery-server, and music-service projects. Added a single back-end Spring application instead." />
    <MESSAGE value="Fix front-end and modify project configuration." />
    <option name="LAST_COMMIT_MESSAGE" value="Fix front-end and modify project configuration." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/Song.java</url>
          <line>11</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/front-end/src/app/playlist/album/album.component.html</url>
          <line>9</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>