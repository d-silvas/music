<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0a3cfaad-a9fa-40fc-8143-05f2fdd4cd02" name="Changes" comment="Remove legacy services and add new music back-end application.&#10;&#10;Deleted outdated Cloud Gateway and Discovery Server services, including all related configuration, source, and resource files. Introduced a new music back-end app with comprehensive class files for album and song management, as well as application configuration and test files.">
      <change afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/dataSources/dbb49dfe-8330-4dbb-9b2b-9145d1f68a8c.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/dataSources/dbb49dfe-8330-4dbb-9b2b-9145d1f68a8c/storage_v2/_src_/schema/main.uQUzAA.meta" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/httpRequests/2024-08-24T160611.200.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/httpRequests/http-client.cookies" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/jsLinters/eslint.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/HELP.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/mvnw" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/mvnw.cmd" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/MusicApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/MusicApplicationConfiguration.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/Album.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/AlbumController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/AlbumNotFoundException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/AlbumRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/AlbumService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/album/AlbumSpecification.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/Song.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/SongController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/SongNotFoundException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/SongRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/song/SongService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/java/dev/davidsilva/music/utils/SearchCriteria.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/src/test/java/dev/davidsilva/music/MusicApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/MusicApplication.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/MusicApplicationConfiguration.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/Album.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumController.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumNotFoundException.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumRepository.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumService.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/album/AlbumSpecification.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/Song.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongController.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongNotFoundException.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongRepository.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/song/SongService.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/classes/dev/davidsilva/music/utils/SearchCriteria.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-archiver/pom.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/music-0.0.1-SNAPSHOT.jar" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/music-0.0.1-SNAPSHOT.jar.original" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/surefire-reports/TEST-dev.davidsilva.music.MusicApplicationTests.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/surefire-reports/dev.davidsilva.music.MusicApplicationTests.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/back-end/target/test-classes/dev/davidsilva/music/MusicApplicationTests.class" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/.prettierrc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/eslint.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-add-to-playlist/icon-add-to-playlist.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-cancel/icon-cancel.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-eye/icon-eye.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icon-play/icon-play.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/icons/icons.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar.component.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/app/ui/topbar/topbar.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/tailwind.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/jarRepositories.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/music.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/music.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/prettier.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/prettier.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/.mvn/wrapper/MavenWrapperDownloader.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/.mvn/wrapper/maven-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/.mvn/wrapper/maven-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/mvnw" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/mvnw.cmd" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/pom.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/src/main/java/blog/cybertricks/music/cloudgatewayservice/CloudGatewayServiceApplication.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/src/main/resources/application.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/cloud-gateway-service/src/test/java/blog/cybertricks/music/cloudgatewayservice/CloudGatewayServiceApplicationTests.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/.mvn/wrapper/MavenWrapperDownloader.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/.mvn/wrapper/maven-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/.mvn/wrapper/maven-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/mvnw" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/mvnw.cmd" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/pom.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/src/main/java/blog/cybertricks/music/discoveryserver/DiscoveryServerApplication.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/src/main/resources/application.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/discovery-server/src/test/java/blog/cybertricks/music/discoveryserver/DiscoveryServerApplicationTests.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/.mvn/wrapper/MavenWrapperDownloader.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/.mvn/wrapper/maven-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/.mvn/wrapper/maven-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/mvnw" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/mvnw.cmd" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/pom.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/.editorconfig" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/MusicServiceApplication.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/album/Album.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/album/AlbumController.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/album/AlbumNotFoundException.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/album/AlbumRepository.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/album/AlbumService.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/album/AlbumSpecification.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/song/Song.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/song/SongController.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/song/SongNotFoundException.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/song/SongRepository.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/song/SongService.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/utils/SearchCriteria.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/java/blog/cybertricks/music/musicservice/utils/SqliteDialect.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/main/resources/application.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/music-service/src/test/java/blog/cybertricks/music/musicservice/MusicServiceApplicationTests.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/angular.json" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/angular.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/proxy.conf.json" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/proxy.conf.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/app.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/app.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/app.component.scss" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/app.component.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/album-peek/album-peek.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/album-peek/album-peek.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-play/playlist-play-album.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-play/playlist-play-album.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-replace/playlist-replace.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/album/controls/playlist-replace/playlist-replace.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/song/controls/playlist-play/playlist-play.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/song/controls/playlist-play/playlist-play.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/playlist/song/controls/playlist-remove/playlist-remove.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/playlist/song/controls/playlist-remove/playlist-remove.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/app/ui/ui.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/app/ui/ui.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/environments/environment.ts" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/environments/environment.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/styles.scss" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/styles.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/music/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/music/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/music/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 0
}]]></component>
  <component name="ProjectId" id="2l6r0aNZCa5CebFJ9uOP1RQgodn" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultHtmlFileTemplate": "HTML File",
    "HTTP Request.MusicApplication | #2.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Spring Boot.MusicApplication.executor": "Run",
    "code.cleanup.on.save": "true",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/home/dev/dev/music/front-end/src/app/ui/icons",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "npm.Front-end.executor": "Run",
    "prettierjs.PrettierConfiguration.Package": "/home/dev/dev/music/front-end/node_modules/prettier",
    "rearrange.code.on.save": "true",
    "settings.editor.selected.configurable": "settings.javascript.linters.eslint",
    "ts.external.directory.path": "/home/dev/dev/music/front-end/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "sqlite"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/icons" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/icons" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui" />
      <recent name="$PROJECT_DIR$/front-end/src/app/ui/topbar" />
    </key>
  </component>
  <component name="RunManager" selected="npm.Front-end">
    <configuration name="MusicApplication | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/MusicApplication.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="MusicApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="music" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="dev.davidsilva.music.MusicApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Front-end" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/front-end/package.json" />
      <command value="start" />
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="HTTP Request.MusicApplication | #2" />
      <item itemvalue="npm.Front-end" />
      <item itemvalue="Spring Boot.MusicApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.MusicApplication | #2" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.20224.419" />
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-IU-242.20224.419" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0a3cfaad-a9fa-40fc-8143-05f2fdd4cd02" name="Changes" comment="" />
      <created>1724511145566</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1724511145566</updated>
      <workItem from="1724511147069" duration="9375000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Remove legacy services and add new music back-end application.&#10;&#10;Deleted outdated Cloud Gateway and Discovery Server services, including all related configuration, source, and resource files. Introduced a new music back-end app with comprehensive class files for album and song management, as well as application configuration and test files." />
    <option name="LAST_COMMIT_MESSAGE" value="Remove legacy services and add new music back-end application.&#10;&#10;Deleted outdated Cloud Gateway and Discovery Server services, including all related configuration, source, and resource files. Introduced a new music back-end app with comprehensive class files for album and song management, as well as application configuration and test files." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>